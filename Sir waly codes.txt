






//////using System;

//////namespace ConsoleApp1
//////{
//////    class Program
//////    {
//////        static void Main(string[] args)
//////        {
//////            Console.WriteLine("Hello World!");
//////        }
//////    }
//////}






////using System;//System is a namespace.
////namespace Lecture2//namespace is a group of classes.
////{
////    class Program
////    {
////        static void Main(string[] args)
////        {
////            //Defining variables
////            /*
////             Naming Convention: Camel Case e.g cost, costOfProduct
////             */
////            var myFirstVariable = "Hello World!" + " variable example";
////            /*statment ends with semicolon. A statment can consist of 
////             * multiple variables and expressions.
////             */


////            Console.WriteLine(myFirstVariable);

////            //data types

////            char letter = 'A';
////            string text = "Pakistan";  //Literal string: 

////            // unsigned integer means positive whole number
////            // including 0
////            uint naturalNumber = 23;

////            // integer means negative or positive whole number
////            // including 0
////            int integerNumber = -23;

////            // float means single-precision floating point
////            // F suffix makes it a float literal
////            float realNumber = 2.3F;

////            // double means double-precision floating point
////            double anotherRealNumber = 2.3; // double literal

////            //Interpolated string:
////            Console.WriteLine($"int uses {sizeof(int)} bytes");//Prints number of bytes occupied by int
////            Console.WriteLine($"int minimum {int.MinValue} bytes");//Prints min value which can be stored in int
////            Console.WriteLine($"int minimum {int.MaxValue} bytes");//Prints max value which can be stored in int

////            Console.WriteLine($"uint uses {sizeof(uint)} bytes");
////            Console.WriteLine($"uint minimum {uint.MinValue} bytes");
////            Console.WriteLine($"uint minimum {uint.MaxValue} bytes");

////            Console.WriteLine($"float uses {sizeof(float)} bytes");
////            Console.WriteLine($"float minimum {float.MinValue} bytes");
////            Console.WriteLine($"float minimum {float.MaxValue} bytes");

////            Console.WriteLine($"double uses {sizeof(double)} bytes");
////            Console.WriteLine($"double minimum {double.MinValue} bytes");
////            Console.WriteLine($"double minimum {double.MaxValue} bytes");

////            Console.WriteLine($"decimal uses {sizeof(decimal)} bytes");
////            Console.WriteLine($"decimal minimum {decimal.MinValue} bytes");
////            Console.WriteLine($"decimal minimum {decimal.MaxValue} bytes");

////            //A decimal variable uses 16 bytes of memory and can
////            //store big numbers, but not as big as a double type.


////            Console.WriteLine("Using doubles:");//double doesn't store values precisely.
////            double a = 0.1;
////            double b = 0.2;
////            if (a + b == 0.3)
////            {
////                Console.WriteLine($"{a} + {b} equals 0.3");
////            }
////            else
////            {
////                Console.WriteLine($"{a} + {b} does NOT equal 0.3");//output
////            }
////            /*-----------------------------------------------*/


////            Console.WriteLine("Using decimals:");
////            decimal c = 0.1M; // M suffix means a decimal literal value
////            decimal d = 0.2M;
////            if (c + d == 0.3M)
////            {
////                Console.WriteLine($"{c} + {d} equals 0.3");//output
////            }
////            else
////            {
////                Console.WriteLine($"{c} + {d} does NOT equal 0.3");
////            }

////            //Use int for whole numbers and double for real
////            //numbers that will not be compared to other values.Use decimal
////            //for money, CAD drawings, general engineering, and wherever
////            //accuracy of a real number is important.


////            bool happy = true;
////            bool sad = false;

////            int thisCannotBeNull = 4;
////            //thisCannotBeNull = null; // compile error!
////            int? thisCouldBeNull = null;//by using nullable or this ?  we can assign null value to an int
////            Console.WriteLine(thisCouldBeNull);
////            Console.WriteLine(thisCouldBeNull.GetValueOrDefault());//replaces null with 0
////            thisCouldBeNull = 7;
////            Console.WriteLine(thisCouldBeNull);//7
////            Console.WriteLine(thisCouldBeNull.GetValueOrDefault());//7
////        }
////    }
////}








////using System;
////using System.Text.Json;
////using System.Text.Json.Serialization;
////using System.IO;
////namespace Lecture16
////{
////    class Program
////    {
////        static void Main(string[] args)
////        {
////            // FileManager.ManageFiles();

////            Person p = new Person
////            {
////                Name = "Ali",
////                Age = 12,
////                Address = new Address
////                {
////                    City = "Lahore",
////                    Country = "Pakistan",
////                    ZIP = 54000
////                }
////            };

////            string jsonOutput = JsonSerializer.Serialize(p);
////            Console.WriteLine(jsonOutput);
////            File.WriteAllText("myfile.txt", jsonOutput);

////            string jsonString = File.ReadAllText("myfile.txt");
////            Person p2 = JsonSerializer.Deserialize<Person>(jsonString);
////            Console.WriteLine(p2.Name);
////        }
////    }
////}







//using System;
//using System.IO;

//namespace Lab
//{

//    class Program
//    {
//        static void Main(string[] args)
//        {
//            //        int i = 9;
//            //    FileStream fout = new FileStream("MyFile.txt", FileMode.Create);
//            //fout.WriteByte((byte) i);
//            //        fout.Close();
//            //FileStream f = new FileStream("MyFile.txt", FileMode.Open);
//            //Console.WriteLine((char)f.ReadByte());
//            //f.Close();
//            //var a = 10;
//            //dynamic j = "laiba";
//            //j = 10;
//            //int? i = null;
//            //i = 5;
//            //int[] arr = { 1, 2, 3, 4 };
//            //int[] arrr = new int[5] { 1,2,3,4,5};
//            //foreach(int k in arr)
//            //{
//            //    Console.WriteLine(arr[k]);
//            //}


//            //void findArea()
//            //{
//            //    Console.WriteLine("none");

//            //}
//            //void minVal(params int[] num)
//            //{
//            //    Console.WriteLine(num[2]);
//            //}
//            //minVal(1, 2, 3);

//            FileStream R = new FileStream("MyFile.txt", FileMode.Open);
//            FileStream f = new FileStream("amna.txt", FileMode.Create);
//            StreamReader sr = new StreamReader(R);
//            StreamWriter sw = new StreamWriter(f);
//            string s = sr.ReadLine();
//            while(s!=null)
//            {
//                Console.WriteLine(s);
//                sw.WriteLine(s);
//                s = sr.ReadLine();
//            }
//            sr.Close();
//            sw.Close();
//            R.Close();


//        }
//    }
//}



//  //   class person
//        //    {
//        //        public string name;
//        //        public int age;}
//        //        public person(string nme,int age)
//        //        {
//        //            nme = name;
//        //           this.age = age;
//        //        }
//        //    }
//        //    person laiba = new person("laiba",10);







